#  Template .NET Core build

#  This template allows you to validate your .NET Core package.
#  The workflow allows running tests and code linting on the default branch.

image: mcr.microsoft.com/dotnet/core/sdk:3.1
clone:
  depth: full              # SonarCloud scanner needs the full history to assign issues properly
definitions:
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  steps:
    - step: &build-test-sonarcloud
      name: Build, test and analyze on SonarCloud
      caches:
        - **************************           # See https://confluence.atlassian.com/bitbucket/caching-dependencies-895552876.html
        - sonar
      script:
        - **************************           # Build your project and run
        - pipe: sonarsource/sonarcloud-scan:1.2.0
    - step: &check-quality-gate-sonarcloud
      name: Check the Quality Gate on SonarCloud
      script:
        - pipe: sonarsource/sonarcloud-quality-gate:0.1.4

pipelines:
  default:
    - parallel:
        - step:
            name: Build and Test
            caches:
              - dotnetcore
            script:
              - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
              - dotnet restore
              - dotnet build --no-restore --configuration Release
              - dotnet test --no-build --configuration Release --test-adapter-path:. --logger:"junit;LogFilePath=$REPORTS_PATH/junit.xml"
        - step:
            name: Lint the code
            caches:
              - dotnetcore
            script:
              - export SOLUTION_NAME=Surfrider-RecurringJobs
              - export REPORTS_PATH=linter-reports
              - dotnet new tool-manifest
              - dotnet tool install JetBrains.ReSharper.GlobalTools
              - dotnet tool restore
              - dotnet jb inspectcode ${SOLUTION_NAME}.sln --output="${REPORTS_PATH}/jb-${BITBUCKET_BUILD_NUMBER}.xml"
            artifacts:
              - linter-reports/**
  branches:
    master:
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud
  pull-requests:
    '**':
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud             
